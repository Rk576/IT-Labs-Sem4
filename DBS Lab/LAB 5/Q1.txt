-- Create the STUDENT table
CREATE TABLE STUDENT (
    regno VARCHAR(20) PRIMARY KEY,
    name VARCHAR(50),
    major VARCHAR(20),
    bdate DATE
);

-- Create the COURSE table
CREATE TABLE COURSES (
    course INT PRIMARY KEY,
    coursename VARCHAR(30),
    dept VARCHAR(30)
);

-- Create the ENROLL table
CREATE TABLE ENROLL (
    regno VARCHAR(20),
    course INT,
    PRIMARY KEY (regno, course),
    FOREIGN KEY (regno) REFERENCES STUDENT(regno),
    FOREIGN KEY (course) REFERENCES COURSES(course)
);

-- Create the BOOK_ADOPTION table
CREATE TABLE BOOK_ADOPTION (
    course INT,
    sem INT,
    book_isbn INT,
    PRIMARY KEY (course, sem),
    FOREIGN KEY (course) REFERENCES COURSE(course),
    FOREIGN KEY (book_isbn) REFERENCES TEXT(book_isbn)
);

-- Create the TEXT table
CREATE TABLE TEXT (
    book_isbn INT PRIMARY KEY,
    booktitle VARCHAR(50),
    publisher VARCHAR(50),
    author VARCHAR(50)
);

INSERT INTO STUDENT VALUES ('R001', 'John Doe', 'Computer Science', '1987-01-01');
INSERT INTO STUDENT VALUES ('R002', 'Jane Smith', 'Electrical', '1990-02-15');
INSERT INTO STUDENT VALUES ('R003', 'Bob Johnson', 'Mechanical', '1985-08-20');
INSERT INTO STUDENT VALUES ('R004', 'Emma Brown', 'Civil Engineering', '1992-03-01');
INSERT INTO STUDENT VALUES ('R005', 'David Lee', 'Biology', '1989-06-10');
INSERT INTO STUDENT VALUES ('R006', 'Dom Torr', 'DSE', '1985-05-01');


INSERT INTO COURSES VALUES (101, 'Calculus III', 'Mathematics');
INSERT INTO COURSES VALUES (102, 'Circuits II', 'Electrical');
INSERT INTO COURSES VALUES (103, 'Thermodynamics', 'Mechanical');
INSERT INTO COURSES VALUES (104, 'Structural Analysis', 'Civil Engineering');
INSERT INTO COURSES VALUES (105, 'Genetics Lab', 'Biology');

INSERT INTO ENROLL VALUES ('R001', 101);
INSERT INTO ENROLL VALUES ('R002', 102); 
INSERT INTO ENROLL VALUES ('R003', 103);
INSERT INTO ENROLL VALUES ('R004', 104); 
INSERT INTO ENROLL VALUES ('R005', 105);
INSERT INTO ENROLL VALUES ('R001', 102);


INSERT INTO BOOK_ADOPTION VALUES (101, 1, 1234); 
INSERT INTO BOOK_ADOPTION VALUES (101, 2, 9876); 
INSERT INTO BOOK_ADOPTION VALUES (102, 1, 2345); 
INSERT INTO BOOK_ADOPTION VALUES (103, 1, 5432);
INSERT INTO BOOK_ADOPTION VALUES (104, 1, 7890); 
INSERT INTO BOOK_ADOPTION VALUES (103, 2, 1231);

INSERT INTO TEXT VALUES (1234, 'Advanced Calculus', 'Publisher XYZ', 'Author ABC'); 
INSERT INTO TEXT VALUES (9876, 'Introduction to Electricity', 'Publisher DEF', 'Author EFG');
INSERT INTO TEXT VALUES (2345, 'Digital Electronics', 'Publisher HIKL', 'Author JKLMN');
INSERT INTO TEXT VALUES (5432, 'Engineering Thermodynamics', 'Publisher MNOPQ', 'Author RSTUVWX'); 
INSERT INTO TEXT VALUES (7890, 'Analysis of Structures', 'Publisher ZABCD', 'Author FGHIJK');
INSERT INTO TEXT VALUES (1231, 'BASICS OF EEE', 'Publisher XYZ', 'Author RSTUVWX'); 
select*from student;
select*from text;
select*from courses;
select*from enroll;
select*from book_adoption;

1)
select course
from book_adoption
group by course
having count(distinct book_isbn)>1;

2)
select distinct dept
from courses c
join book_adoption ba on  c.course=ba.course
join text t on ba.book_isbn=t.book_isbn
where publisher = 'Publisher XYZ';
/*above and below both work same*/
SELECT distinct dept
FROM COURSES c, BOOK_ADOPTION ba
WHERE c.course = ba.course
AND ba.BOOK_ISBN IN (SELECT BOOK_ISBN FROM TEXT WHERE PUBLISHER = 'Publisher XYZ');

3)
select distinct name
from student s 
join enroll e on s.regno=e.regno
group by name
having count(e.regno)>1;
4)
select*from student
where regno not in (select distinct regno from enroll);
5)
select distinct t.*from text t
join book_adoption ba on t.book_isbn = ba.book_isbn
join enroll e on ba.course = e.course
where e.regno = 'R001'; 
6)
select ba.course
from book_adoption ba 
join text t on ba.book_isbn=t.book_isbn
where t.publisher = 'Publisher XYZ'
group by ba.course
having count(t.book_isbn)>2;
7)
select e.regno
from enroll e
join book_adoption ba on e.course=ba.course
group by e.regno
order by count(ba.book_isbn) desc
limit 1;
8)
select publisher, count(*) as number_of_books
from text 
group by publisher;
9)
SELECT s.regno, s.name 
FROM STUDENT s
WHERE NOT EXISTS (
    SELECT c.course 
    FROM COURSES c
    LEFT JOIN BOOK_ADOPTION ba ON c.course = ba.course
    WHERE ba.book_isbn IS NULL 
    AND c.course IN (
        SELECT e.course
        FROM ENROLL e 
        WHERE e.regno = s.regno
    )
);
10)
create view v1 as(
SELECT s.regno, s.name 
FROM STUDENT s
WHERE NOT EXISTS (
    SELECT c.course 
    FROM COURSES c
    LEFT JOIN BOOK_ADOPTION ba ON c.course = ba.course
    WHERE ba.book_isbn IS NULL 
    AND c.course IN (
        SELECT e.course#
        FROM ENROLL e 
        WHERE e.regno = s.regno
    )
));
select*from v1;
